const jwt = require("jsonwebtoken");
const User = require("../models/User");

// Middleware x√°c th·ª±c token (b·∫Øt bu·ªôc login)
const authenticate = async (req, res, next) => {
  try {
    const token = req.headers.authorization?.split(" ")[1]; // Bearer <token>
    if (!token) return res.status(401).json({ message: "Thi·∫øu token!" });

    const decoded = jwt.verify(token, process.env.JWT_SECRET);
    req.user = await User.findById(decoded.id).select("-password");
    if (!req.user) return res.status(401).json({ message: "Token kh√¥ng h·ª£p l·ªá!" });

    next();
  } catch (error) {
    return res.status(401).json({ message: "X√°c th·ª±c th·∫•t b·∫°i!", error });
  }
};

// Middleware ki·ªÉm tra quy·ªÅn (Admin/User)
const authorize = (...roles) => {
  return (req, res, next) => {
    if (!roles.includes(req.user.role)) {
      return res.status(403).json({ message: "B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p!" });
    }
    next();
  };
};

// üü¢ Export l·∫°i c·∫£ 2 function
module.exports = { authenticate, authorize };
